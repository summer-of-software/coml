<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="../COML.xsl" type="text/xsl" media="screen" ?>
<?mso-infoPathSolution productVersion="11.0.8034" PIVersion="1.0.0.0" name="urn:schemas-microsoft-com:office:infopath:COML:http---www-vtc-vsc-edu-COML-0-0" language="en-us" href="COML.xsn" solutionVersion="1.0.0.47" ?>
<?mso-application progid="InfoPath.Document"?>

<outline created="2010-04-02" reviewed="2017-11-06" xmlns="http://www.vtc.vsc.edu/COML_0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.vtc.vsc.edu/COML_0.0 ../COML.xsd">

  <summary>
    <authors>
      <author>Peter Chapin</author>
    </authors>
    <department-program>Computer Information Systems</department-program>
    <number>CIS-5230</number>
    <title>Parallel Programming</title>
    <prerequisites>
      <AND>
        <course>CIS-2230</course>
        <course>CIS-3050</course>
      </AND>
    </prerequisites>
    <credits>3</credits>
    <graded>true</graded>
    <time lecture="3" laboratory="0" studio="0" recitation="0" study="6"/>
    <semesters>
      <semester>Spring</semester>
    </semesters>
    <description>This course examines the applications, algorithms, construction, configuration
      and performance of parallel programs. Topics include shared memory parallelism using POSIX
      threads and OpenMP, and multi-machine parallelism using MPI. Parallel programming on
      modern GPU devices is also introduced.</description>
  </summary>
  <short-title>Parallel Programming</short-title>
  <course-level>5000</course-level>
  <required-texts>
    <book>
      <title>Introduction to Parallel Programming</title>
      <authors>
        <author>Peter S. Pacheco</author>
      </authors>
      <publisher>Morgan Kaufmann</publisher>
      <copyright>2011</copyright>
      <ISBN>978-0-12-374260-5</ISBN>
    </book>
  </required-texts>
  <course-outcomes>
    <outcome>Understand the range of parallel programming options available.</outcome>
    <outcome>Understand the issues and approaches for safely controlling concurrency.</outcome>
    <outcome>Write programs that take advantage of multiple threads in a shared memory 
      system using the POSIX Threads API.</outcome>
    <outcome>Write programs that take advantage of directive based methods such as
      OpenMP.</outcome>
    <outcome>Write programs that take advantage of message passing in a multi-machine cluster
      using MPI.</outcome>
    <outcome>Write programs that take advantage of GPU based computing using CUDA and
      OpenACC.</outcome>
  </course-outcomes>
  <course-content>
    <topic hours="3">Introduction; approaches and applications for parallelism.</topic>
    <topic hours="1">Amdahl's Law and Flynn's Taxonomy.</topic>
    <topic hours="2">POSIX Thread creation and destruction.</topic>
    <topic hours="4">Shared memory (POSIX Thread) synchronization primitives.</topic>
    <topic hours="4">Parallel decomposition via recursion.</topic>
    <topic hours="4">Performance tradeoffs with parallelism; caching effects, thread
      pools.</topic>
    <topic hours="5">OpenMP.</topic>
    <topic hours="1">Lock free programming in shared memory systems.</topic>
    <topic hours="1">Cluster software and its configuration.</topic>
    <topic hours="4">MPI.</topic>
    <topic hours="2">Cluster network configurations; communication patterns.</topic>
    <topic hours="5">Parallel decomposition in clusters.</topic>
    <topic hours="4">GPU programming with CUDA.</topic>
    <topic hours="2">GPU programming with OpenACC.</topic>
  </course-content>
  <delivery-method>online</delivery-method>
  <evaluation>
    <method>Homework</method>
    <method>Projects</method>
    <method>Final Exam</method>
  </evaluation>
  <graduate-evaluation>Read and summarize two papers selected by the instructor, and one
    paper of their own choosing (approved by the instructor). Complete a "graduate project"
    specified by the instructor in place of one of the regular projects that delves
    more deeply into the subject matter and that includes a detailed performance
    analysis. The student will also do a short presentation about his or her project to the
    class.</graduate-evaluation>
</outline>
